@using Freelancer.Model.Models.Employee;
@using Freelancer.Model.Common;
@using Freelancer.Web.Areas.Admin.ViewModels;
@using Freelancer.Web.Areas.Admin.HelperClasses;
@model EmployeeViewModel
@{

    
}
<script src="~/Scripts/Validation.js"></script>
<script src="~/Areas/Admin/Scripts/commonTolkDanmark.js"></script>
<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">Add New Employee</h3>
    </div>
    <div class="box-body">

        <form id="Booking" method="post" enctype="multipart/form-data" action="@Url.Action("Index","Employee")">
            <div id="" class="">

                <!-- Modal content-->
                <div class="row ">

                    <div id="formdata" class="modal-body">


                        <div class="formTextSize padding20px">

                            <div class="pull-left col-md-6 col-xs-12">
                                Please Enter Employee detail.
                                  <h3 class="text-muted">
                                      Employee<small class="text-danger"> (*Fields must be filled in) @Html.ValidationSummary()</small>
                                </h3>
                              
                             
                               

                                <div class="form formWH form-group-sm">Employee informaiton</div>

                                <div class="row">
                                    <div class="form-group col-sm-8">
                                       @Html.TextBoxFor(m => m.Name, new { @type = "text", @id = "txtName", @onkeypress = "return isAlpha(event)", @placeholder = "Name *", @class = "form-control" })
                                       
                                    </div>
                                </div>


                                <div class="row">
                                    <div class="form-group col-sm-8">
                                     @Html.DropDownListFor(m => m.TypeId,Model.Type,"Select Type", new { @class = "form-control" })
                                       
                                    </div>
                                </div>


                                <div class="row">
                                    <div class="form-group col-sm-8">
                                        @Html.TextBoxFor(m => m.Street, new { @type = "text", @id = "txtStreet", @placeholder = "Street *", @class = "form-control" })
                                       
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-sm-8">
                                        @Html.TextBoxFor(m => m.PostCode, new { @type = "text", @id = "txtPostCode", @placeholder = "PostCode *", @MaxLength = "4", @onkeypress = "return isNumberKey(event)", @class = "form-control" })
                                       
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-sm-8">
                                       @Html.TextBoxFor(m => m.City, new { @type = "text", @id = "txtCity", @placeholder = "City *", @class = "form-control" })
                                       
                                    </div>
                                </div>



                                
                                  
                                <div class="row">
                                    <div class="form-group">
                                        <div class="form-group col-sm-8">
                                        @*@if (Model.Gender == 3)
                                        {
                                            <select name="Gender" class="input-validation-error form-control">
                                                <option value="">Select Gender</option>
                                                <option value="@((int)EGender.Men)">Mand</option>
                                                <option value="@((int)EGender.Women)">Kvinde</option>
                                            </select>
                                        }
                                        else*@
                                        @if (true)
                                        {
                                            <select name="Gender" class="form-control">
                                                <option value="">Select Gender</option>
                                                <option value="@((int)EGender.Men)">Mand</option>
                                                <option value="@((int)EGender.Women)">Kvinde</option>
                                            </select>
                                        }


                                        </div>
                                    </div>
                                    </div>


                                </div>





                            <div class="pull-right col-md-6 col-sm-12">

                                <div class="row">
                                    <div class="form-group col-sm-8">
                                        @Html.TextBoxFor(m => m.Tlf, new { @type = "text", @id = "txttlf", @placeholder = "Tlf *", @onkeypress = "return isNumberKey(event)", @MaxLength = "8", @class = "form-control" })
                                       
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="form-group col-sm-8">
                                        @Html.TextBoxFor(m => m.Email, new { @type = "text", @id = "txtEmail", @placeholder = "Email *", @class = "form-control" })
                                      
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-sm-8">
                                        @Html.TextBoxFor(m => m.HourlyPay, new { @value = (Model.HourlyPay > 0 ? Model.HourlyPay.ToString() :"hourly pay"), @onkeypress = "return isfloatKey(event)", @type = "text", @id = "txtHourlyPay", @placeholder = "HourlyPay *", @class = "form-control" })
                                     
                                    </div>
                                </div>
                                <!-- /.box pets -->
                                <div class="row">
                                    <!-- /.col -->
                                    <div class="form-group col-sm-8">
                                        <div class="box box-default collapsed-box box-solid">
                                            <div class="box-header with-border">
                                                <h3 class="box-title">Pets</h3>
                                                <div class="box-tools pull-right">
                                                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                                        <i class="fa fa-plus"></i>
                                                    </button>
                                                </div>
                                                <!-- /.box-tools -->
                                            </div>
                                            <!-- /.box-header -->
                                            <div class="box-body">
                                                <div class="box">
                                                    <div class="box-header">
                                                        <h3 class="box-title">
                                                            <table>
                                                                <tr>
                                                                    <td>
                                                                        @Html.DropDownListFor(m => m.PetId, Model.PetList, "Select Pet", new { @class = "form-control" })


                                                                    </td>
                                                                    <td>
                                                                        <button id="AddPet" type="button" class="btn btn-block btn-success btn-sm" style="margin-left:10px">Add Pet</button>

                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        </h3>
                                                    </div>
                                                    <!-- /.box-header -->
                                                    <div class="box-body no-padding">
                                                        <table id="TablePet"></table>
                                                    </div>
                                                    <!-- /.box-body -->
                                                </div>

                                            </div>
                                            <!-- /.box-body -->
                                        </div>
                                        <!-- /.box -->
                                    </div>
                                    <!-- /.col -->

                                </div>
                                <!-- /.box pets -->
                                <div class="row">
                                    <div class="form-group col-sm-8">
                                        <label class="checkbox-inline right-align-checkbox">
                                            <span>O</span>
                                            @Html.CheckBoxFor(m => m.Orange)
                                        </label>

                                    </div>
                                </div>
                               
                                <div class="row">
                                    <div class="form-group col-sm-8">
                                        <label class="checkbox-inline right-align-checkbox">
                                            <span>Driving Licence</span>
                                            @Html.CheckBoxFor(m => m.DrivingLicence)
                                        </label>

                                    </div>
                                </div>
                             
                                <div class="row">
                                    <div class="form-group col-sm-8">
                                        <label class="checkbox-inline right-align-checkbox">
                                            <span>Car</span>
                                            @Html.CheckBoxFor(m => m.Car)
                                        </label>
                                     
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-sm-8">
                                        @Html.TextAreaFor(m => m.Description, new { @type = "text", rows = "6", @id = "txtDescription", @placeholder = "Description *", @class = "form-control" })
                                    </div>
                                </div>
                                
                            </div>

                           

                            <div class="col-lg-3 pull-right">
                                <div>
                                    <label>&nbsp;</label>
                                    <div>
                                        <button class="btn btn-success" type="submit">
                                            <i class="fa fa-plus" aria-hidden="true"></i>
                                            Add
                                        </button>

                                        <a class="btn btn-default" href="@Url.Action("index")">
                                            <i class="fa fa-times" aria-hidden="true"></i>
                                            Clear
                                        </a>
                                    </div>
                                </div>
                            </div>

                        </div>
                       
                        <lable ID="lbluserid"></lable>
                    </div>
                    <div id="SuccessMessage" class="modal-body" style="display:none;height:250px">
                        Tak for din bestilling
                        <a href="@Url.Action("BookingModal","Booking")"><input type="button" name="btnclose" value="Close" id="btnclose"></a>
                    </div>
                </div>

            </div>
        </form>

    </div>



</div>

<div class="box box-primary">
    <div class="box-header with-border">

        <div class="row">
            <div class="col-md-6">

                <h3 class="box-title">Available Employee List </h3>

            </div>



        </div>
    </div>
    <!-- /.box-header -->
    <!-- form start -->

    <div class="box-body">



        <table id="myTable" class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>SNo</th>
                    <th><div class="col-lg-2"><nobr>&nbsp;Actions&nbsp;</nobr></div></th>
                    <th><div class="col-lg-2"><nobr>&nbsp;Name&nbsp;</nobr></div></th>
                    <th><div class="col-lg-2"><nobr>&nbsp;Address&nbsp;</nobr></div></th>
                    <th><div class="col-lg-2"><nobr>&nbsp;Email&nbsp;</nobr></div></th>
                    <th><div class="col-lg-2"><nobr>&nbsp;Tlf&nbsp;</nobr></div></th>
                    <th><div class="col-lg-2"><nobr>&nbsp;Hourly Pay&nbsp;</nobr></div></th>
                    <th><div class="col-lg-2"><nobr>&nbsp;Type&nbsp;</nobr></div></th>
                    <th><div class="col-lg-2">DateCreated</div></th>
                    <th><div class="col-lg-2">Deleted</div></th>
                    <th><div class="col-lg-2">Active</div></th>

                </tr>
            </thead>
            <tbody></tbody>
        </table>


    </div>
    <!-- /.box-body -->

    <div class="box-footer">

    </div>

</div>

@*pet list operations script*@

<script>
        function ReorderListPet() {
            var PetCollection = JSON.stringify({ 'PetCollection': createJSONPet(true) });
            var index = $('input[class="PetCollections"]').length;
            $('#TablePet').empty();
            if(index>0)
            {
                var url = '/admin/employee/RemoveObjectPet?index=' + index;
                $.ajax({
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    type: 'POST',
                    data: PetCollection,
                    success: function (data) {

                        $('#TablePet').empty();
                        $('#TablePet').append('<tr ><td>' + data);
                    },
                    error: function (a, b, c) {
                        alert(a + " " + b + " " + c);
                    }
                });
            }
        }
        function RemoveObjectPet(index) {
          
            $('#' + index + '').remove();
            ReorderListPet();
        }
        function createJSONPet(del) {
            jsonObj = [];
            $("input[class=PetCollections]").each(function () {



                myObj = {}
                myObj["AnimalId"] = $(this).attr('id').split('_')[1];
                myObj["Name"] = $(this).val();
                myObj["PetName"] = $("#PetCollectionName_" + $(this).attr('id').split('_')[1]).val();


                jsonObj.push(myObj);
            });
            if (del == false) {

                myObj = {}
                myObj["AnimalId"] = $('#PetId').val();
                myObj["Name"] = $('#PetId :selected').text();
                jsonObj.push(myObj);
            }

            return jsonObj;
        }


        $('#AddPet').click(function () {

            if ($('#PetId option:selected').text() == "Select Pet") {
                return;
            }
            else {
                for(var i=0;i<$('input[class="PetCollections"]').length;i++)
                {

                    if($('#PetId option:selected').text()==$('input[class="PetCollections"]')[i].value)
                    {
                        return;
                    }
                }
            }

            var index = $('input[class="PetCollections"]').length;
            PetCollection = JSON.stringify({ 'PetCollection': createJSONPet(false) });
            var url = '/admin/employee/AddEmployeePet?index=' + index;
            $.ajax({
                url: url,
                contentType: 'application/json; charset=utf-8',

                type: 'POST',
                data: PetCollection,
                success: function (data) {
                    $('#TablePet').empty();
                    $('#TablePet').append('<tr ><td>' + data);
                },
                error: function (a, b, c) {
                    alert(a + " " + b + " " + c);
                }
            });



        });
</script>
@*end pet list operations script*@
@*CustomerKeyslist opetations script*@


<script>
    var mainTable;
    $(document).ready(function () {

        var url = "@Url.Action("LoadAllData","Employee")";

        var columns = [
                 { "data": "SNo", "name": "SNo", "autoWidth": true, "Orderable": true },
                  {

                      "data": null,
                      "orderable": false,
                      "autoWidth": false,

                      //"defaultContent": "<button><span class='fa fa-edit'></span></button>"
                      "render": function (data, type, full, meta) {

                         ;
                          var html = '<div  class="btn-group pull-right"><button class="btn btn-default dropdown-toggle"  data-toggle="dropdown">' +
                                  'Actions' + ' <i class="fa fa-angle-down"></i></button>' +
                                   '<ul class="dropdown-menu pull-right">' +


                                      '<li>' +
                                           '<a  href="@Url.Action("Edit")?Id=' + full.EmployeeId + '&BackUrl=@Url.Action("Index", "Employee")"><i class="fa fa-bars"></i> Ret</a>' +
                                       '</li>' +
                                      '<li>' +
                                           '<a  href="#" onClick="onDeleteCallback(' + full.EmployeeId + ',true)"><i class="fa fa-remove"></i> Delete</a>' +

                                           '<a  href="#" onClick="onDeleteCallback(' + full.EmployeeId + ',false)"><i class="fa fa-undo"></i> Undelete</a>' +

                                           '<a  href="#" onClick="onActiveCallback(' + full.EmployeeId + ',true)"><i class="fa fa-remove"></i> Active</a>' +

                                           '<a  href="#" onClick="onActiveCallback(' + full.EmployeeId + ',false)"><i class="fa fa-undo"></i> InActive</a>' +


                          '</ul></div>';



                          return html;

                      }
                  },
                 { "data": "Name", "name": "Name", "autoWidth": true, "orderable": true, "searchable": true },
                 { "data": "Address", "name": "Address", "autoWidth": true, "orderable": true, "searchable": true },
                 { "data": "Email", "name": "Email", "autoWidth": true, "orderable": true, "searchable": true },
                 { "data": "Tlf", "name": "Tlf", "autoWidth": true, "orderable": true, "searchable": true },
                 { "data": "HourlyPay", "name": "Hourly Pay", "autoWidth": true, "orderable": true, "searchable": true },
                 { "data": "Type", "name": "Type", "autoWidth": true, "orderable": true, "searchable": true },
                  { "data": "DateCreated", "name": "DateCreated", "autoWidth": true, "orderable": true, "searchable": true },
                 



                {
                   "data": null,
                   "orderable": false,
                   "render": function (data, type, full, meta) {

                                       var html = commonTolkDanmark.getEmployeeDeletedColorCode(full);

                                       return '<div class="orderStatus">' + html + "</div>";

                                   }

                 },
                 {
                    "data": null,
                    "orderable": false,
                    "render": function (data, type, full, meta) {

                                       var html = commonTolkDanmark.getEmployeeActiveColorCode(full);

                                       return '<div class="orderStatus">' + html + "</div>";

                                   }

                 }

        ];

        mainTable = commonManager.setUpDataTable("#myTable", url, columns, [], fillExtraData, 10);


    });
    function fillExtraData(d) {

        $("#chkSelectAll").prop('checked', false);
        var CheckStatus = $("#IsCheckStatus").val();
        d.searchable = "true";

        d.IsActive = true;// $("#search").val();


    }
    function fnRowCallback(nRow, aData, iDisplayIndex, iDisplayIndexFull) {

        //switch (aData.del) {
        //    case true:

        //        $(nRow).css('background-color', '#CF6565')
        //        break;
        //    case false:
        //        $(nRow).css('background-color', '#6FB76F')
        //        break;

        //}
    }
    function onDeleteSuccess(data) {

        hideConfirmationDialog();

        mainTable.ajax.reload();

    }

    function onDeleteError(data) {


    }
     function onDeleteCallback(itemId, delUndel) {
    
        openConfirmationDialog(
            (delUndel == true ? "Are you sure, you want to make select record slette?" : "Are you sure, you want to make select record Undeleted?"),
             function () {
                 commonAjaxManager.postAsync('@Url.Action("deleteUndelete")', { Id: itemId, value: delUndel }, onDeleteSuccess, onDeleteError);
        });


    }
    function onActiveCallback(itemId, ActiveInactive) {

        openConfirmationDialog(
            (ActiveInactive == true ? "Are you sure, you want to make select record Active?" : "Are you sure, you want to make select record Inactive?"),
             function () {
                 commonAjaxManager.postAsync('@Url.Action("ActiveInActive")', { Id: itemId, value: ActiveInactive }, onDeleteSuccess, onDeleteError);
             });


    }

    $(document).ready(function(){
        $("#txtHourlyPay").val($(this).val() == 0 ? '' : $(this).val());
    })

</script>


