@using Freelancer.Model;
@using Freelancer.Web.Areas.Admin.ViewModels;
@using Freelancer.Web.Areas.Admin.HelperClasses;
@model PetViewModel
@{


}

@*<!-- Date Picker -->
<link rel="stylesheet" href="~/Areas/Admin/Content/AdminLTE-2.3.7/plugins/datepicker/datepicker3.css">
<!-- Daterange picker -->
<link rel="stylesheet" href="~/Areas/Admin/Content/AdminLTE-2.3.7/plugins/daterangepicker/daterangepicker.css">

<!-- daterangepicker -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.11.2/moment.min.js"></script>
<script src="~/Areas/Admin/Content/AdminLTE-2.3.7/plugins/daterangepicker/daterangepicker.js"></script>
<!-- datepicker -->
<script src="~/Areas/Admin/Content/AdminLTE-2.3.7/plugins/datepicker/bootstrap-datepicker.js"></script>

<script src="~/Scripts/jquery.maskedinput.js"></script>
<script src="~/Areas/Admin/Scripts/commonAjaxHandler.js"></script>*@
<div class="box box-warning">
    <div class="box-header with-border">
        <h3 class="box-title">Add New Pet</h3>
    </div>
    <div class="box-body">

       @using (Html.BeginForm("Create", "Pet", FormMethod.Post,
                                     new { enctype = "multipart/form-data", @class = "form-inline" }))
       {
            <div id="" class="row">

                <!-- Modal content-->
                <div class="row ">

                  
                    <div class="col-lg-3">
                        <div class="form-group">

                            
                            <div class="col-lg-4">
                                <div class="form-group">

                                    <label for="PostalCode">Name <small>(e.g. Dog,Cat)</small></label>

                                    @Html.TextBoxFor(m => m.Name, new { @type = "text", @id = "txtName", @placeholder = "Name *", @class = "form-control" })
                                    @Html.ValidationMessageFor(m=>m.Name)

                                </div>
                            </div>
                           

                        </div>
                    </div>

          

                    <div class="col-lg-2 pull-right">
                        <div>
                            <label>&nbsp;</label>
                            <div>
                                <button type="submit" class="btn btn-primary">Create</button>
                            </div>
                        </div>
                    </div>
                  
            </div>
              
                </div>
       }
       

    </div>



</div>


<div class="box box-primary">
    <div class="box-header with-border">

        <div class="row">
            <div class="col-md-6">

                <h3 class="box-title">Available Pet List </h3>

            </div>


           
        </div>
    </div>
    <!-- /.box-header -->
    <!-- form start -->

    <div class="box-body">



        <table id="myTable" class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>SNo</th>
                    <th><div class="col-lg-2"><nobr>&nbsp;Actions&nbsp;</nobr></div></th>
                    <th><div class="col-lg-2"><nobr>&nbsp;Name&nbsp;</nobr></div></th>
                    <th ><div class="col-lg-2">DateCreated</div></th>
                    <th>Status</th>
                    
                </tr>
            </thead>
            <tbody></tbody>
        </table>


    </div>
    <!-- /.box-body -->

    <div class="box-footer">

    </div>

</div>




<script>
    var mainTable;
    $(document).ready(function () {

        var url = "@Url.Action("LoadAllData","Pet")";

        var columns = [
                 { "data": "SNo", "name": "SNo", "autoWidth": true , "Orderable": true},
                  {

                      "data": null,
                      "orderable": false,
                      "autoWidth": false,
                      
                      //"defaultContent": "<button><span class='fa fa-edit'></span></button>"
                      "render": function (data, type, full, meta) {

                         ;
                          var html = '<div  class="btn-group pull-right"><button class="btn btn-default dropdown-toggle"  data-toggle="dropdown">' +
                                  'Actions' + ' <i class="fa fa-angle-down"></i></button>' +
                                   '<ul class="dropdown-menu pull-right">' +


                                      '<li>' +
                                           '<a  href="@Url.Action("Edit")?Id=' + full.AnimalId + '&BackUrl=@Url.Action("Index", "Booking")"><i class="fa fa-bars"></i> Ret</a>' +
                                       '</li>' +
                                      '<li>' +
                                           '<a  href="#" onClick="onDeleteCallback(' + full.AnimalId + ',true)"><i class="fa fa-remove"></i> Delete</a>' +
                                           
                                           '<a  href="#" onClick="onDeleteCallback(' + full.AnimalId + ',false)"><i class="fa fa-undo"></i> Undelete</a>' +


                          '</ul></div>';




                          return html;

                      }
                  },
                 { "data": "Name", "name": "Name", "autoWidth": true, "orderable": true, "searchable": true },
                  { "data": "DateCreated", "name": "DateCreated", "autoWidth": true, "orderable": false },
                {
                    "data": "del",
                    "orderable": false,
                    "autoWidth": false,
                    "searchable":true,
                    "render": function (data, type, full, meta) {

                        var html = "";
                        if (data == true)
                        { html = '<input type="checkbox" class="tolkCheck" value="' + full.Id + '" Checked="true" disabled/>'; }
                        else {
                            html = '<input type="checkbox" class="tolkCheck" value="' + full.Id + '" disabled/>';
                        }


                        return html;

                    }
                }

        ];
      
        mainTable = commonManager.setUpDataTable("#myTable", url, columns, [], fillExtraData, 10);


    });
    function fillExtraData(d) {

        $("#chkSelectAll").prop('checked', false);
        var CheckStatus = $("#IsCheckStatus").val();
        d.searchable = "true";
        
        d.IsActive = true;// $("#search").val();
      

    }
    function fnRowCallback(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
      
        switch (aData.del) {
            case true:
              
                $(nRow).css('background-color', '#CF6565')
                break;
            case false:
                $(nRow).css('background-color', '#6FB76F')
                break;

        }
    }
    function onDeleteSuccess(data) {

        hideConfirmationDialog();

        mainTable.ajax.reload();

    }

    function onDeleteError(data) {


    }
    function onDeleteCallback(itemId, delUndel) {
        
        openConfirmationDialog(
            (delUndel == true ? "Are you sure, you want to make select record slette?" : "Are you sure, you want to make select record Undeleted?"),
             function () {
            commonAjaxManager.deleteRecordAsync('@Url.Action("deleteUndelete")', { Id: itemId, del: delUndel }, onDeleteSuccess, onDeleteError);
        });


    }
</script>

