@using Freelancer.Model;
@using Freelancer.Model.Models.Schedule;
@using Freelancer.Web.Areas.Admin.ViewModels;
@using Freelancer.Model.Common;
@using Freelancer.Web.Areas.Admin.HelperClasses;
@model ScheduleViewModel
@{


}
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/Validation.js"></script>
<script src="~/Areas/Admin/Scripts/commonTolkDanmark.js"></script>
<link href="~/Areas/Admin/Cloack/src/clockpicker.css" rel="stylesheet" />
<link href="~/Areas/Admin/Cloack/src/standalone.css" rel="stylesheet" />
<script src="~/Areas/Admin/Cloack/src/clockpicker.js"></script>
<script src="~/Areas/Admin/Scripts/SchedulerValidation.js?i=1.46"></script>

<div class="box box-primary">

    <div class="box-header with-border">
        <h3 class="box-title">Scheduler</h3>
    </div>
    <div class="box-body">
        <form id="Booking" method="post" enctype="multipart/form-data" action="@Url.Action("Index","Scheduler",FormMethod.Post)">
            @Html.HiddenFor(m => m.CustomerId)
            <div id="" class="">
                <!-- Modal content-->
                <div class="row ">
                    <div id="formdata" class="modal-body">

                        <div class="formTextSize padding20px">
                            <div class="pull-left col-md-6 col-xs-12">
                                Please Schedule.
                                <h3 class="text-muted">
                                    Scheduler<small class="text-danger"> (*Fields must be filled in) @Html.ValidationSummary()</small>
                                </h3>
                             
                                <div class="form formWH form-group-sm">Employee informaiton</div>
                                <div class="row">
                                    <div class="form-group col-sm-8">
                                        <!-- /.col -->
                                        <div class="box box-default box-solid">
                                            <div class="box-header with-border">
                                                <h3 class="box-title">Select Employee</h3>
                                                <div class="box-tools pull-right">
                                                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                                        <i class="fa fa-minus"></i>
                                                    </button>
                                                </div>
                                                <!-- /.box-tools -->
                                            </div>
                                            <!-- /.box-header -->
                                            <div class="box-body">
                                                <div class="box">
                                                    <div class="box-header">
                                                        <h3 class="box-title">
                                                            <table>
                                                                <tr>
                                                                    <td>
                                                                        @Html.DropDownListFor(m => m.EmployeeId, Model.EmployeeList, "Select Employee", new { @class = "form-control" })

                                                                    </td>
                                                                    <td>
                                                                        <button id="AddEmployee" type="button" class="btn btn-block btn-success btn-sm" style="margin-left:10px">Add Employee</button>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        </h3>
                                                    </div>
                                                    <!-- /.box-header -->
                                                    <div class="box-body no-padding">
                                                        <table id="Tableemployee">
                                                            @Html.Partial("_EmployeePetRow", new Tuple<List<ScheduleEmployee>, int>(Model.ScheduleEmployees == null ? Model.ScheduleEmployees : Model.ScheduleEmployees, 0))

                                                        </table>
                                                    </div>
                                                    <!-- /.box-body -->
                                                </div>
                                            </div>
                                            <!-- /.box-body -->
                                        </div>
                                        <!-- /.box -->
                                        <!-- /.col -->
                                    </div>
                                </div>
                              
                                <div class="row">
                                   @Html.Partial("_NormalDays", Model)
                                </div>
                                 <div class="row">
                                    <div class="form formWH form-group-sm">Week Selection</div>
                                    <div class="form-group col-sm-8" name="@(WeekTypes.EveryWeekofYear.ToString())">
                                        <span>@(WeekTypes.EveryWeekofYear.ToString())</span>
                                        @Html.CheckBoxFor(m => m.weekModel.EveryWeekofYear, new { @class = "WeekCheckbox" })
                                        @Html.TextBoxFor(m => m.weekModel.EveryWeekofYearHours, new { @placeholder = "tid", @onkeypress = "return isfloatKey(event)", @class = "form-control" })

                                    </div>
                                    <div class="form-group col-sm-8" name="@(WeekTypes.Every2ndWeekofYear.ToString())">
                                        <span>@(WeekTypes.Every2ndWeekofYear.ToString())</span>
                                        @* @Html.HiddenFor(m => m.weekModel.OddWeek, new { @class = "hiddencheckbox" })*@
                                        @Html.CheckBoxFor(m => m.weekModel.Every2ndWeekofYear, new { @class = "WeekCheckbox" })
                                        @Html.TextBoxFor(m => m.weekModel.Every2ndWeekofYearHours, new { @placeholder = "tid", @onkeypress = "return isfloatKey(event)", @class = "form-control" })

                                    </div>
                                    <div class="form-group col-sm-8" name="@(WeekTypes.Every3rdWeekofYear.ToString())">
                                        @*<script>
                                                $("#Every2ndWeekofYear").keyup(function () {
                                                    $("#Every2ndWeekofYear").val($("#Every2ndWeekofYear").val());
                                                });
                                            </script>*@
                                        <span>@(WeekTypes.Every3rdWeekofYear.ToString())</span>

                                        @Html.CheckBoxFor(m => m.weekModel.Every3rdWeekofYear, new { @class = "WeekCheckbox" })
                                        @Html.TextBoxFor(m => m.weekModel.Every3rdWeekofYearHours, new { @placeholder = "tid", @onkeypress = "return isfloatKey(event)", @class = "form-control" })

                                    </div>
                                    <div class="form-group col-sm-8" name="@(WeekTypes.Every4thWeekofYear.ToString())">
                                        <span>@(WeekTypes.Every4thWeekofYear.ToString())</span>
                                        @* @Html.HiddenFor(m => m.weekModel.OddWeek, new { @class = "hiddencheckbox" })*@
                                        @Html.CheckBoxFor(m => m.weekModel.Every4thWeekofYear, new { @class = "WeekCheckbox" })
                                        @Html.TextBoxFor(m => m.weekModel.Every4thWeekofYearHours, new { @placeholder = "tid", @onkeypress = "return isfloatKey(event)", @class = "form-control" })

                                    </div>
                                    <div class="form-group col-sm-8" name="@(WeekTypes.FirstWeekOfMonth.ToString())">
                                        <span>@(WeekTypes.FirstWeekOfMonth.ToString())</span>
                                        @* @Html.HiddenFor(m => m.weekModel.Every1stWeek, new { @class = "hiddencheckbox" })*@
                                        @Html.CheckBoxFor(m => m.weekModel.FirstWeekOfMonth, new { @class = "WeekCheckbox" })
                                        @Html.TextBoxFor(m => m.weekModel.FirstWeekOfMonthHours, new { @placeholder = "tid", @onkeypress = "return isfloatKey(event)", @class = "form-control" })
                                    </div>
                                    <div class="form-group col-sm-8" name="@(WeekTypes.SecondWeekOfMonth.ToString())">
                                        <span>@(WeekTypes.SecondWeekOfMonth.ToString())</span>
                                        @* @Html.HiddenFor(m => m.weekModel.Every2ndWeek, new { @class = "hiddencheckbox" })*@
                                        @Html.CheckBoxFor(m => m.weekModel.SecondWeekOfMonth, new { @class = "WeekCheckbox" })
                                        @Html.TextBoxFor(m => m.weekModel.SecondWeekOfMonthHours, new { @placeholder = "tid", @onkeypress = "return isfloatKey(event)", @class = "form-control" })
                                    </div>
                                    <div class="form-group col-sm-8" name="@(WeekTypes.ThirdWeekOfMonth.ToString())">
                                        <span>@(WeekTypes.ThirdWeekOfMonth.ToString())</span>
                                        @*@Html.HiddenFor(m => m.weekModel.Every3rdWeek, new { @class = "hiddencheckbox" })*@

                                        @Html.CheckBoxFor(m => m.weekModel.ThirdWeekOfMonth, new { @class = "WeekCheckbox" })
                                        @Html.TextBoxFor(m => m.weekModel.ThirdWeekOfMonthHours, new { @placeholder = "tid", @onkeypress = "return isfloatKey(event)", @class = "form-control" })

                                    </div>
                                    <div class="form-group col-sm-8" name="@(WeekTypes.FourthWeekOfMonth.ToString())">
                                        <span>@(WeekTypes.FourthWeekOfMonth.ToString())</span>
                                        @*@Html.HiddenFor(m => m.weekModel.Every4thWeek, new { @class = "hiddencheckbox" })*@
                                        @Html.CheckBoxFor(m => m.weekModel.FourthWeekOfMonth, new { @class = "WeekCheckbox" })
                                        @Html.TextBoxFor(m => m.weekModel.FourthWeekOfMonthHours, new { @placeholder = "tid", @onkeypress = "return isfloatKey(event)", @class = "form-control" })

                                    </div>
                                    <div class="form-group col-sm-8" name="@(WeekTypes.LastWeekOfMonth.ToString())">
                                        <span>@(WeekTypes.LastWeekOfMonth.ToString())</span>
                                        @* @Html.HiddenFor(m => m.weekModel.Every5thWeek, new { @class = "hiddencheckbox" })*@
                                        @Html.CheckBoxFor(m => m.weekModel.LastWeekOfMonth, new { @class = "WeekCheckbox" })
                                        @Html.TextBoxFor(m => m.weekModel.LastWeekOfMonthHours, new { @placeholder = "tid", @onkeypress = "return isfloatKey(event)", @class = "form-control" })

                                    </div>

                                </div>
                                
                            </div>
                        </div>
                    </div>


                    <div class="pull-right col-md-6 col-sm-12">
                        <div class="row">
                            <div class="form formWH form-group-sm"></div>
                            <div class="form-group col-sm-8"></div>
                        </div>
                        <div class="row">
                            <div class="form formWH form-group-sm"></div>
                            <div class="form-group col-sm-8"></div>
                        </div>
                        <div class="row">
                            <div class="form formWH form-group-sm"></div>
                            <div class="form-group col-sm-8"></div>
                        </div>
                        <div class="row">
                            <div class="form formWH form-group-sm"></div>
                            <div class="form-group col-sm-8"></div>
                        </div>
                       
                   
                    
                        <div class="row">
                            <div class="form formWH form-group-sm">Dates if any</div>
                            <div class="form-group col-sm-8">

                                <div class="box-body">
                                    <div class="box">
                                        <div class="box-header">
                                            <h3 class="box-title">
                                                <table>
                                                    <tr>
                                                        <td>
                                                            <input type="date" id="txtScheduleDate" name="txtScheduleDate" class="date-picker" />
                                                        </td>
                                                        <td>
                                                            <button id="AddDate" type="button" class="btn btn-block btn-success btn-sm" style="margin-left:10px">Add Dates</button>
                                                        </td>
                                                    </tr>
                                                </table>
                                            </h3>
                                        </div>
                                        <!-- /.box-header -->
                                        <div class="box-body no-padding">
                                            <table id="TableDates">
                                                @Html.Partial("_ScheduleDates", new Tuple<List<ScheduleWithDates>, int>(Model.ScheduleWithDatess == null ? Model.ScheduleWithDatess : Model.ScheduleWithDatess, 0))

                                            </table>
                                        </div>
                                        <!-- /.box-body -->
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            
                                <div class="form formWH form-group-sm">Starting Date</div>
                                <div class="form-group col-sm-8">
                                    @Html.TextBoxFor(x => x.StartingDate, new { @type = "date", @class = "form-control" })
                                </div>
                            </div>
                       
                        <div class="row">
                            @Html.Partial("_WishDays", Model) 
                        </div>
                        <div class="row">
                            <div class="form formWH form-group-sm"></div>
                            <div class="form-group col-sm-8">
                               
                            </div>
                        </div>



                            <div class="col-lg-3 pull-right">
                                <div>
                                    <label>&nbsp;</label>
                                    <div>
                                        <button class="btn btn-success" type="submit" onclick="return ValidateScheduler(event)">
                                            <i class="fa fa-plus" aria-hidden="true"></i>
                                            Add
                                        </button>
                                        <a class="btn btn-default" href="@Url.Action("index")">
                                            <i class="fa fa-times" aria-hidden="true"></i>
                                            Clear
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <lable ID="lbluserid"></lable>
                    </div>
            <div id="SuccessMessage" class="modal-body" style="display:none;height:250px">
                Tak for din bestilling
                <a href="@Url.Action("BookingModal","Booking")"><input type="button" name="btnclose" value="Close" id="btnclose"></a>
            </div>

        </form>
    </div>

</div>
<div class="box box-primary">
   
    <!-- /.box-header -->
    <!-- form start -->
    <div class="box-body">

    

    </div>
    <!-- /.box-body -->
    <div class="box-footer">
    </div>
</div>
@*pet list operations script*@
<script type="text/javascript">
    $('.clockpicker').clockpicker({
        placement: 'top',
        align: 'left',
        donetext: 'Done'
    });
</script>
<script>
    function ReorderListPet() {
        var PetCollection = JSON.stringify({ 'ScheduleEmployee': createJSONPet(true) });
        var index = $('input[class="ScheduleEmployees"]').length;
        $('#Tableemployee').empty();
        if (index > 0) {
            var url = '/admin/Scheduler/RemoveScheduleEmployee?index=' + index;
            $.ajax({
                url: url,
                contentType: 'application/json; charset=utf-8',
                type: 'POST',
                data: PetCollection,
                success: function (data) {

                    $('#Tableemployee').empty();
                    alert("test")
                    $('#Tableemployee').append('<tr ><td>' + data);
                },
                error: function (a, b, c) {
                    alert(a + " " + b + " " + c);
                }
            });
        }
    }
    function RemoveObjectPet(index) {

        alert(index);
        $('#' + index + '').remove();
        ReorderListPet();
    }
    function createJSONPet(del) {
        jsonObj = [];
        $("input[class=ScheduleEmployees]").each(function () {



            myObj = {}
            myObj["EmployeeId"] = $(this).attr('id').split('_')[1];
            myObj["EmployeeName"] = $(this).val();
            //myObj["PetName"] = $("#ScheduleEmployeesName_" + $(this).attr('id').split('_')[1]).val();


            jsonObj.push(myObj);
        });
        if (del == false) {

            myObj = {}
            myObj["EmployeeId"] = $('#EmployeeId').val();
            myObj["EmployeeName"] = $('#EmployeeId :selected').text();
            jsonObj.push(myObj);
        }

        return jsonObj;
    }


    $('#AddEmployee').click(function () {

        if ($('#EmployeeId option:selected').text() == "Select Employee") {
            return;
        }
        else {
            for (var i = 0; i < $('input[class="ScheduleEmployees"]').length; i++) {

                if ($('#EmployeeId option:selected').text() == $('input[class="ScheduleEmployees"]')[i].value) {
                    return;
                }
            }
        }

        var index = $('input[class="ScheduleEmployees"]').length;
        ScheduleEmployee = JSON.stringify({ 'ScheduleEmployee': createJSONPet(false) });
        var url = '/admin/Scheduler/AddScheduleEmployee?index=' + index;

        $.ajax({
            url: url,
            contentType: 'application/json; charset=utf-8',

            type: 'POST',
            data: ScheduleEmployee,
            success: function (data) {
                $('#Tableemployee').empty();
                $('#Tableemployee').append('<tr ><td>' + data);
            },
            error: function (a, b, c) {
                alert(a + " " + b + " " + c);
            }
        });



    });
</script>
<script type="text/javascript">
   
    $(function () {
        debugger
        //$('#txtScheduleDate').datepicker({ dateFormat: 'dd-mm-yy' });
       // $('#txtScheduleDate').datetimepicker({ dateFormat: 'dd-mm-yy' });
        //$('#txtScheduleDate').datepicker({
        //    format: {
        //        toDisplay: function (date, format, language) {
        //            var date = new Date(date),
        //            month = '' + (date.getMonth() + 1),
        //            day = '' + date.getDate(),
        //            year = date.getFullYear();

        //            if (month.length < 2) month = '0' + month;
        //            if (day.length < 2) day = '0' + day;
        //            return [day, month, year].join('/');
        //        },
        //        toValue: function (date, format, language) {
        //            var date = new Date(date),
        //            month = '' + (date.getMonth() + 1),
        //            day = '' + date.getDate(),
        //            year = date.getFullYear();

        //            if (month.length < 2) month = '0' + month;
        //            if (day.length < 2) day = '0' + day;

        //            return [year, month, day].join('-');
        //        }
        //    }
        //});



        //$('#txtScheduleDate').datepicker({
        //    language: 'da',
        //    changeMonth: true,
        //    changeYear: true,
        //    showButtonPanel: true,
        //    dateFormat: 'dd-mm-yy'
        //});
        //var dateObject = $("#txtScheduleDate").datepicker("getDate");
        //var dateString = $.datepicker.formatDate("dd-mm-yy", dateObject);
        //$("#txtScheduleDate").datepicker($.datepicker.regional['da']);
        //$.datepicker.setDefaults({
        //    dateFormat: 'dd-mm-yyyy'
        //});
        //$("#txtScheduleDate").datepicker('option', 'format', 'dd-mm-yy');
        //        $('#txtScheduleDate').datepicker({
        //            language: 'da',
        //            dateFormat: 'dd-mm-yyyy',
        //            Format: 'dd-mm-yyyy'
        //        });
                //$("#txtScheduleDate").datepicker({ dateFormat: "dd-mm-yyyy" }).val()
                //$("#txtScheduleDate").datepicker($.datepicker.language['da']);
                //$("#txtScheduleDate").datepicker('option', 'dateFormat', 'dd.mm.yy');
    });

</script>
<script>
    function ReorderListDates() {
        var PetCollection = JSON.stringify({ 'ScheduleDates': createJSONDates(true) });
        var index = $('input[class="ScheduleDates"]').length;
        $('#TableDates').empty();
        if (index > 0) {
            var url = '/admin/Scheduler/RemoveScheduleDates?index=' + index;
            $.ajax({
                url: url,
                contentType: 'application/json; charset=utf-8',
                type: 'POST',
                data: PetCollection,
                success: function (data) {

                    $('#TableDates').empty();
                    alert("test")
                    $('#TableDates').append('<tr ><td>' + data);
                },
                error: function (a, b, c) {
                    alert(a + " " + b + " " + c);
                }
            });
        }
    }
    function RemoveObjectDates(index) {
        alert(index);
        $('#' + index + '').remove();
        ReorderListDates();
    }
    function createJSONDates(del) {
        jsonObj = [];
        $("input[class=ScheduleDates]").each(function () {



            myObj = {}
           
            myObj["ScheduleDates"] = $(this).val();
            //myObj["PetName"] = $("#ScheduleEmployeesName_" + $(this).attr('id').split('_')[1]).val();


            jsonObj.push(myObj);
        });
        if (del == false) {

            myObj = {}
            myObj["ScheduleDates"] = $('#txtScheduleDate').val();
            jsonObj.push(myObj);
        }

        return jsonObj;
    }


    $('#AddDate').click(function () {
        debugger
        if ($('#txtScheduleDate').val() == "") {
            return;
        }
        else {
            for (var i = 0; i < $('input[class="ScheduleDates"]').length; i++) {

                if ($('#txtScheduleDate').val() == $('input[class="ScheduleDates"]')[i].value) {
                    return;
                }
            }
        }

        var index = $('input[class="ScheduleDates"]').length;
        scheduleWithDates = JSON.stringify({ 'ScheduleDates': createJSONDates(false) });
        var url = '/admin/Scheduler/AddScheduleDates?index=' + index;

        $.ajax({
            url: url,
            contentType: 'application/json; charset=utf-8',

            type: 'POST',
            data: scheduleWithDates,
            success: function (data) {
                $('#TableDates').empty();
                $('#TableDates').append('<tr ><td>' + data);
            },
            error: function (a, b, c) {
                alert(a + " " + b + " " + c);
            }
        });



    });
</script>
@*end pet list operations script*@
@*CustomerKeyslist opetations script*@